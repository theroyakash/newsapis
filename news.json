{"status": "ok", "totalResults": 38, "articles": [{"source": {"id": null, "name": "NDTV News"}, "author": null, "title": "Nirmala Sitharaman Announces Atmanirbhar Bharat 3.0 Measures, Says Strong Recovery Clearly Happening: Highlights - NDTV Profit", "description": "Coronavirus cases are still surging in several parts of the country, which has been adding more than 40,000 cases a day.", "url": "https://www.ndtv.com/business/nirmala-sitharaman-live-on-stimulus-package-finance-minister-addresses-press-conference-2324125", "urlToImage": "https://c.ndtvimg.com/2020-11/jc7j0h8g_nirmala-sitharaman-pti-november-2020_650x400_12_November_20.jpg", "publishedAt": "2020-11-12T08:25:51Z", "content": "Finance Minister Nirmala Sitharaman is announcing new stimulus measures to rescue the economy out of a historic contraction. \"A number of indicators have are showing that recovery is clearly happenin\u2026 [+5826 chars]"}, {"source": {"id": null, "name": "NDTV News"}, "author": "Associated Press", "title": "NASA\u2019s Perseverance Rover Needs More Time, Money to Bring Back Mars Rock Samples: Independent Panel - Gadgets 360", "description": "NASA is underestimating the amount of time and money it will take to bring Mars rocks back to Earth in the coming decade, an independent panel said.", "url": "https://gadgets.ndtv.com/science/news/nasa-perseverance-mars-rock-samples-bringing-back-earth-more-time-money-needed-independent-panel-report-2324233", "urlToImage": "https://i.gadgets360cdn.com/large/mars_ascent_vehicle_nasa_1605165547922.jpg", "publishedAt": "2020-11-12T07:25:08Z", "content": "NASA is underestimating the amount of time and money it will take to bring Mars rocks back to Earth in the coming decade, an independent panel said Tuesday.\r\nThe review board suggested that NASA and \u2026 [+1844 chars]"}, {"source": {"id": null, "name": "The Indian Express"}, "author": "Express Web Desk", "title": "\u2018Turned India\u2019s strength into weakness\u2019: Rahul Gandhi attacks PM Modi over RBI report on recession - The Indian Express", "description": "The Indian economy likely entered into a technical recession for the first time in history at the end of the first half of 2020-21, according to the Reserve Bank of India.", "url": "https://indianexpress.com/article/india/rahul-gandhi-narendra-modi-recession-indian-economy-7048928/", "urlToImage": "https://images.indianexpress.com/2020/11/ch1450596.jpg", "publishedAt": "2020-11-12T07:22:49Z", "content": "Senior Congress leader Rahul Gandhi (Express photo By Amit Mehra/File)Congress leader Rahul Gandhi on Thursday targeted Prime Minister Narendra Modi over the RBI report, claiming the country has ente\u2026 [+1777 chars]"}, {"source": {"id": null, "name": "NDTV News"}, "author": null, "title": "Cop Assault Case: Arnab Goswami's Pre-Arrest Bail Hearing Adjourned Till November 23 - NDTV", "description": "A sessions court in Mumbai has adjourned till November 23 the hearing into the pre-arrest bail plea of Republic TV Editor-in-Chief Arnab Goswami and his wife in a case registered against them by Mumbai Police for allegedly assaulting a woman police officer.", "url": "https://www.ndtv.com/mumbai-news/cop-assault-case-arnab-goswamis-pre-arrest-bail-hearing-adjourned-till-november-23-2324240", "urlToImage": "https://c.ndtvimg.com/2020-11/s8t0i85o_arnab-goswami-pti-photo_625x300_12_November_20.jpg", "publishedAt": "2020-11-12T07:17:47Z", "content": "Mumbai Police files case against Arnab Goswami and his wife for allegedly assaulting a woman cop\r\nMumbai: A sessions court in Mumbai has adjourned till November 23 the hearing into the pre-arrest bai\u2026 [+1589 chars]"}, {"source": {"id": null, "name": "The Indian Express"}, "author": "Entertainment Desk", "title": "Mirzapur renewed for Season 3 - The Indian Express", "description": "After a successful run of two seasons, Prime Video series Mirzapur has been renewed for a third season.", "url": "https://indianexpress.com/article/entertainment/web-series/mirzapur-renewed-for-season-3-7048941/", "urlToImage": "https://images.indianexpress.com/2020/11/Mirzapur-3.jpg", "publishedAt": "2020-11-12T07:08:34Z", "content": "Mirzapur will be back with Season 3. (Photo: Prime Video)After the resounding success of Mirzapur Season 2, the makers and the streaming platform have renewed the web series for a third season.\r\nAs p\u2026 [+1232 chars]"}, {"source": {"id": null, "name": "Firstpost"}, "author": null, "title": "After taking a nap, China's Chang'e-4 probe resumes work for 24th lunar day - Firstpost", "description": "The lander woke up at 12.42 am IST (3.12 am Beijing time) on Tuesday while the rover Yutu-2 woke up at 7.47 am IST (10.17 am Beijing time) on Monday.", "url": "https://www.firstpost.com/tech/science/after-taking-a-nap-chinas-change-4-probe-resumes-work-for-24th-lunar-day-9007241.html", "urlToImage": "https://images.firstpost.com/wp-content/uploads/2019/01/Screen-Shot-2019-01-05-at-8.01.44-AM-1.jpg", "publishedAt": "2020-11-12T07:06:00Z", "content": "FP TrendingNov 12, 2020 12:36:00 IST\r\nThe lander and rover of the Chang'e-4 probe have resumed work for the 24th lunar day on the far side of the moon.\r\nChinese News Agency Xinhua cited Lunar Explora\u2026 [+1871 chars]"}, {"source": {"id": null, "name": "Hindustan Times"}, "author": "hindustantimes.com | Edited by Kanishka Sarkar", "title": "\u2018You dream of becoming CM after getting 40 seats\u2019: RJD\u2019s Manoj Jha taunts Nitish Kumar - Hindustan Times", "description": "In all, NDA partners - BJP, JD(U), Vikassheel Insaan Party, and Hindustani Awam Morcha (Secular) - together won 125 seats of the 243 assembly constituencies whereas the RJD-led Grand Alliance failed to cross the majority mark of 122 seats as it won on 110 sea\u2026", "url": "https://www.hindustantimes.com/bihar-election/you-dream-of-becoming-cm-after-getting-40-seats-rjd-s-manoj-jha-taunts-nitish-kumar/story-75F2Zu1xcmVl3TAXeswAUK.html", "urlToImage": "https://www.hindustantimes.com/rf/image_size_960x540/HT/p2/2020/11/12/Pictures/bihar-poll-results-jd-patna-celebration-in_83585886-24b1-11eb-b650-20c76dd985fd.jpg", "publishedAt": "2020-11-12T06:39:42Z", "content": "Rashtriya Janata Dal (RJD) leader Manoj Jha on Thursday took a swipe at Bihar chief minister Nitish Kumar saying the Janata Dal (United) president \u201cdreams\u201d of retaining the chief ministerial post des\u2026 [+1532 chars]"}, {"source": {"id": null, "name": "Tech Explorist"}, "author": "https://www.facebook.com/malewar.amit", "title": "Circadian rhythms drive beta cell regeneration - Tech Explorist", "description": "Scientists observed that this regeneration mechanism was under the influence of circadian rhythms - the molecular clocks regulating metabolic functions according to a 24-hour cycle of alternating day-night.", "url": "https://www.techexplorist.com/circadian-rhythms-drive-beta-cell-regeneration/36099/", "urlToImage": "https://www.techexplorist.com/wp-content/uploads/2020/11/pancreatic-islets.jpg", "publishedAt": "2020-11-12T06:32:00Z", "content": "The cell regeneration phenomenon describes the process in which functional cells start proliferating to compensate for the loss. The perfect examples are skin, liver, the organs that repair themselve\u2026 [+3150 chars]"}, {"source": {"id": null, "name": "91mobiles"}, "author": null, "title": "Apple iPhone SE 3 specs, release timeline tipped: 6-inch display, dual cameras, and more - 91mobiles", "description": "iPhone SE 3 launch will not take place in the first half of 2021, analyst Ming-Chi Kuo said.", "url": "https://www.91mobiles.com/hub/iphone-se-3-specifications-release-timeline-tipped/", "urlToImage": "https://static.hub.91mobiles.com/wp-content/uploads/2020/11/iPhone-SE-2020-Flipkart-sale.jpg", "publishedAt": "2020-11-12T06:23:34Z", "content": "iPhone SE 3 launch will not take place in the first half of 2021, analyst Ming-Chi Kuo said.\r\nThe iPhone SE 2020 revived the affordable iPhone line, which brought joy to many who could not afford App\u2026 [+1495 chars]"}, {"source": {"id": null, "name": "News18"}, "author": "Buzz Staff", "title": "Cricket Fans Can't Wait to See Virat Kohli's Team Donning Rumoured Retro Kit During Australia Tour - News18", "description": "There's a rumour floating about on social media that the Indian squad touring Australia will be donning the retro jersey.", "url": "https://www.news18.com/news/buzz/cricket-fans-cant-wait-to-see-virat-kohlis-team-donning-rumoured-retro-kit-during-australia-tour-3072587.html", "urlToImage": "https://images.news18.com/ibnlive/uploads/2020/11/1605161364_untitled-design-2020-11-12t113629.519.png", "publishedAt": "2020-11-12T06:17:00Z", "content": "IPL 2020 is done and dusted. The Indian Team has now embarked on nearly two-month-long Australia tour from Dubai in specially designed PPE kits on Wednesday night. The squad led by Virat Kohli is all\u2026 [+1222 chars]"}, {"source": {"id": null, "name": "The Indian Express"}, "author": "Kriti Sonali", "title": "Soorarai Pottru movie review and release LIVE UPDATES: Suriya wins hearts - The Indian Express", "description": "Soorarai Pottru Movie Review and Rating, Soorarai Pottru Tamil Full Movie Review Download Live Updates: Here's what celebrities, fans and critics are saying about Suriya-starrer Soorarai Pottru, which is streaming on Amazon Prime Video.", "url": "https://indianexpress.com/article/entertainment/tamil/soorarai-pottru-live-updates-suriya-shines-in-amazon-prime-video-movie-7047860/", "urlToImage": "https://images.indianexpress.com/2020/11/suriya-1200.jpg", "publishedAt": "2020-11-12T06:16:09Z", "content": "Aparna Balamurali, who plays a strong, self-made woman in Soorarai Pottru, told indianexpress.com, \"Soorarai Pottru has given me a lot of confidence in my career. I now feel like I can say no to some\u2026 [+1132 chars]"}, {"source": {"id": null, "name": "Hindustan Times"}, "author": "Yashwant Raj     , edited by Vinod Janardhanan", "title": "Biden names chief of staff, signals reliance on trusted, moderate aides - Hindustan Times", "description": "Klain was Biden\u2019s first major personnel announcement as the president-elect forged ahead with putting together his team for taking charge on January 20.", "url": "https://www.hindustantimes.com/world-news/biden-names-chief-of-staff-signals-reliance-on-trusted-moderate-aides/story-HpCIQ4Tzhs8VfCgsQLlPXN.html", "urlToImage": "https://www.hindustantimes.com/rf/image_size_960x540/HT/p2/2020/11/12/Pictures/washington-organization-eisenhower-executive-coordinator-president-responding_09299212-24ae-11eb-b650-20c76dd985fd.jpg", "publishedAt": "2020-11-12T06:16:00Z", "content": "US President-elect Joe Biden has named Ron Klain, a decades-long associate, as his chief of staff, signalling he will rely on a close circle of known and trusted aides, all moderates.\r\nKlain was Bide\u2026 [+3076 chars]"}, {"source": {"id": "the-times-of-india", "name": "The Times of India"}, "author": "Bloomberg", "title": "India in historic technical recession, RBI 'nowcast' shows - Times of India", "description": "India Business News: India\u2019s economy probably shrank for a second straight quarter, according to RBI, pushing the country into an unprecedented recession. Gross domestic p", "url": "https://timesofindia.indiatimes.com/business/india-business/india-in-historic-technical-recession-rbi-nowcast-shows/articleshow/79185526.cms", "urlToImage": "https://static.toiimg.com/thumb/msid-79185928,width-1070,height-580,imgsize-622460,resizemode-75,overlay-toi_sw,pt-32,y_pad-40/photo.jpg", "publishedAt": "2020-11-12T06:03:00Z", "content": null}, {"source": {"id": null, "name": "Hindustan Times"}, "author": "hindustantimes.com", "title": "\u2018He said we aren\u2019t like that\u2019: R Ashwin talks about Virat Kohli and Ricky Ponting\u2019s spat in IPL 2020 - Hindustan Times", "description": "IPL 2020: During a game between Delhi Capitals and Royal Challengers Bangalore, R Ashwin picked up a minor injury and was forced off the field after bowling his quota of four overs. But Kohli and RCB coach Simon Katich did not take kindly to it.", "url": "https://www.hindustantimes.com/cricket/he-said-we-aren-t-like-that-r-ashwin-talks-about-virat-kohli-and-ricky-ponting-s-spat-in-ipl-2020/story-MNdpCE6YWSpjU4CBb7CB6I.html", "urlToImage": "https://www.hindustantimes.com/rf/image_size_960x540/HT/p2/2020/11/12/Pictures/_c485fa64-24a9-11eb-bf59-6b6d61a0f07e.jpg", "publishedAt": "2020-11-12T05:49:33Z", "content": "Virat Kohli is one of the most fiercest competitors\u2019 in world cricket. The 32-year-old batsman wears his heart on his sleeves and gets into regular arguments on the field with the opposition players.\u2026 [+1714 chars]"}, {"source": {"id": "the-times-of-india", "name": "The Times of India"}, "author": "Reuters", "title": "India's Serum says produced 40 million doses of AstraZeneca Covid-19 vaccine - Times of India", "description": "India News: Serum Institute of India, the world's largest vaccine producer, said on Thursday it has made 40 million doses of AstraZeneca's potential Covid-19 vacc", "url": "https://timesofindia.indiatimes.com/india/indias-serum-says-produced-40-million-doses-of-astrazeneca-covid-19-vaccine/articleshow/79185315.cms", "urlToImage": "https://static.toiimg.com/thumb/msid-79185300,width-1070,height-580,imgsize-118570,resizemode-75,overlay-toi_sw,pt-32,y_pad-40/photo.jpg", "publishedAt": "2020-11-12T05:49:00Z", "content": null}, {"source": {"id": "the-times-of-india", "name": "The Times of India"}, "author": "TIMESOFINDIA.COM", "title": "Pictures: Arjun Rampal's girlfriend Gabriella Demetriades arrives at NCB office for a second round of int - Times of India", "description": "Arjun Rampal's girlfriend Gabriella Demetriades was papped by the shutterbugs as she left from her home for Narcoti", "url": "https://timesofindia.indiatimes.com/entertainment/hindi/bollywood/news/arjun-rampals-girlfriend-gabriella-demetriades-heads-to-ncb-office-for-a-second-round-of-interrogation/articleshow/79185131.cms", "urlToImage": "https://static.toiimg.com/thumb/msid-79185193,width-1070,height-580,overlay-toi_sw,pt-32,y_pad-40,resizemode-75,imgsize-184551/79185193.jpg", "publishedAt": "2020-11-12T05:41:00Z", "content": "Arjun Rampals girlfriend Gabriella Demetriades was snapped at the Narcotics Control Bureau office, where she was summoned as part of an ongoing drugs probe. After being grilled by the NCB, Gabriella \u2026 [+216 chars]"}, {"source": {"id": null, "name": "Livemint"}, "author": "Nasrin Sultana", "title": "Goldman Sachs upgrades Indian equities to overweight; sees 11% upside to Nifty - Mint", "description": "Goldman Sachs thinks that the investment case for India has improved after initially lowering India to marketweight in April on concerns of nationwide shutdown.The broker expects corporate profits to rebound 27% next year and a further 21% in 2022", "url": "https://www.livemint.com/news/india/goldman-sachs-raises-indian-to-overweight-sees-11-upside-11605158611570.html", "urlToImage": "https://images.livemint.com/img/2020/11/12/600x338/2020-08-20T102938Z_1_LYNXMPEG7J0MI_RTROPTP_3_INDIA-BUSINESS_1599068609735_1599068620095_1605158757800.JPG", "publishedAt": "2020-11-12T05:36:44Z", "content": "MUMBAI: Goldman Sachs has raised Indian equities to overweight on hopes that earnings recovery will lead rally. Goldman Sachs were structural bulls on India but had lowered India to marketweight in A\u2026 [+2087 chars]"}, {"source": {"id": "the-times-of-india", "name": "The Times of India"}, "author": "TIMESOFINDIA.COM", "title": "Coronavirus: How to battle the infamous loss of smell and taste associated with COVID-19 - Times of India", "description": "Loss of smell is one of the most unexplainable, and probably the weirdest symptoms people are experiencing with COVID-19.", "url": "https://timesofindia.indiatimes.com/life-style/health-fitness/health-news/coronavirus-loss-of-smell-and-taste-how-to-battle-the-infamous-loss-of-smell-and-taste-associated-with-covid-19/photostory/79175694.cms", "urlToImage": "https://static.toiimg.com/photo/79176285.cms", "publishedAt": "2020-11-12T05:25:46Z", "content": "COVID-19 patients recover their loss of smell and taste soon after regaining their sense of smell. For those who experience the symptom for a long while, a non-pharmaceutical therapy, such as smell t\u2026 [+1098 chars]"}, {"source": {"id": "the-hindu", "name": "The Hindu"}, "author": "Staff Reporter", "title": "Schools, colleges not to reopen in T.N. on November 16 - The Hindu", "description": "Govt withdraws previous announcement after feedback from parents", "url": "https://www.thehindu.com/news/national/tamil-nadu/schools-colleges-not-to-reopen-in-tn-on-november-16/article33081293.ece", "urlToImage": "https://www.thehindu.com/news/national/tamil-nadu/swjib4/article32020095.ece/ALTERNATES/LANDSCAPE_615/08JULTH--ONLINE", "publishedAt": "2020-11-12T05:24:35Z", "content": "The Tamil Nadu government has announced that both colleges and schools for Classes 9 to 12 in the State will not reopen on November 16. \r\nThe State government said that after analysing the feedback f\u2026 [+1841 chars]"}, {"source": {"id": null, "name": "NDTV News"}, "author": "Ajay Pal Singh", "title": "Rohit Sharma Calls Mumbai Indians \"One Family\" After Their 5th IPL Title Win. Watch - NDTV Sports", "description": "Mumbai Indians took to Twitter to share a glimpse of Rohit Sharma's dressing room talk after their fifth IPL title win.", "url": "https://sports.ndtv.com/ipl-2020/indian-premier-league-rohit-sharma-calls-mumbai-indians-one-family-after-their-5th-ipl-title-win-watch-2324139", "urlToImage": "https://c.ndtvimg.com/2020-11/el1udnlg_rohit-sharma-mumbai-indians-twitter_625x300_12_November_20.jpg", "publishedAt": "2020-11-12T05:07:20Z", "content": "Mumbai Indians became only the second Indian Premier League franchise after Chennai Super Kings to win back-to-back titles on Tuesday with a five-wicket win over Delhi Capitals in Dubai. The five-tim\u2026 [+1910 chars]"}]}